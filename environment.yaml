# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: traque

channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
  - pytorch
  - nvidia
  - conda-forge
  - defaults

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  - python=3.10
  - pytorch=2.3.0
  - torchvision=0.18.0
  - torchaudio=2.3.0
  - pytorch-cuda=11.8
  - lightning=2.2.4
  - torchmetrics=0.11.4
  - rich=13.3.5
  - pre-commit=3.4.0
  - pytest=7.4.0

  # --------- loggers --------- #
  # - wandb
  # - neptune-client
  # - mlflow
  # - comet-ml
  # - aim>=3.16.2 # no lower than 3.16.2, see https://github.com/aimhubio/aim/issues/2550

  # --------- TRAQue ---------- #
  # - kornia=0.7.*           # for data augmentations on gpu

  - pip>=23
  - pip:
      - -r requirements.txt --index-url https://pypi.tuna.tsinghua.edu.cn/simple
